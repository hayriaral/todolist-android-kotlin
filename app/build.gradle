// Module-level build file.

/**
 * The first line in the build configuration applies the Android plugin for
 * Gradle to this build and makes the android block available to specify
 * Android-specific build options.
 */
plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

/**
 * Important tip: Create a file named keystore.properties in the root directory
 * of your project. This file should contain your signing information. In your module's
 * build.gradle file, add code to load your keystore.properties file before the android {} block.
 * Create a variable called keystorePropertiesFile, and initialize it to your
 * keystore.properties file, in the rootProject folder. Initialize a new Properties()
 * object called keystoreProperties. Then, load your keystore.properties file into
 * the keystoreProperties object.
 */
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

/**
 * The android block is where you configure all your Android-specific
 * build options.
 */
android {

    /**
     * compileSdkVersion specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     */
    compileSdkVersion 30

    /**
     * buildToolsVersion specifies the version of the SDK build tools, command-line
     * utilities, and compiler that Gradle should use to build your app. You need to
     * download the build tools using the SDK Manager.
     *
     * This property is optional because the plugin uses a recommended version of
     * the build tools by default.
     */
    buildToolsVersion "30.0.3"

    /**
     * The defaultConfig block encapsulates default settings and entries for all
     * build variants, and can override some attributes in main/AndroidManifest.xml
     * dynamically from the build system. You can configure product flavors to override
     * these values for different versions of your app.
     */
    defaultConfig {

        /**
         * applicationId uniquely identifies the package for publishing.
         * However, your source code should still reference the package name
         * defined by the package attribute in the main/AndroidManifest.xml file.
         */
        applicationId "com.aralapps.todolist"

        /**
         * Defines the minimum API level required to run the app.
         */
        minSdkVersion 28

        /**
         * Specifies the API level used to test the app.
         */
        targetSdkVersion 30

        /**
         * Defines the version number of your app.
         */
        versionCode 1

        /**
         * Defines a user-friendly version name for your app.
         */
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies Proguard settings and is not signed by default.
     */
    buildTypes {
        release {

            /**
             * Enables code shrinking, obfuscation, and optimization for only
             * your project's release build type.
             */
            minifyEnabled true

            /**
             * Enables resource shrinking, which is performed by the Android Gradle plugin.
             */
            shrinkResources true

            /**
             * Includes the default ProGuard rules files that are packaged with
             * the Android Gradle plugin.
             */
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

/**
 * The dependencies block in the module-level build configuration file
 * specifies dependencies required to build only the module itself.
 * There are three types of dependencies: local library module, local binary
 * and remote binary dependencies.
 */
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // for local test
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    // for the instrumented test APK
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}